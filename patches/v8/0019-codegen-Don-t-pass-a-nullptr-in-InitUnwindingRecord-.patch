From b418fac819163546767919b8c04ea170bc0a3233 Mon Sep 17 00:00:00 2001
From: Luis Pardo <lpardosixtos@microsoft.com>
Date: Fri, 11 Oct 2024 13:18:42 -0700
Subject: [codegen] Don't pass a nullptr in InitUnwindingRecord for x64

After CL https://crrev.com/c/5713169, MacroAssemblerBase constructor
expects isolate to be non-null, but InitUnwindingRecord for x64 is
passing a nullptr to the MacroAssembler constructor. This breaks
mksnapshot for Windows debug builds with v8 symbol level 2.

Updated the code with the logic that is applied to the arm64 version
of the same function.

Change-Id: Id8a6a292e62d2e9f70011dafc562659bb2f3d178
Reviewed-on: https://chromium-review.googlesource.com/c/v8/v8/+/5924806
Reviewed-by: Clemens Backes <clemensb@chromium.org>
Commit-Queue: Luis Pardo <lpardosixtos@microsoft.com>
Cr-Commit-Position: refs/heads/main@{#96585}

diff --git a/src/diagnostics/unwinding-info-win64.cc b/src/diagnostics/unwinding-info-win64.cc
index 6c5642aa672086ae0f2c8cac26e83f5b28d7c218..1312609e5b648fdca187373c374126282c7afa77 100644
--- a/src/diagnostics/unwinding-info-win64.cc
+++ b/src/diagnostics/unwinding-info-win64.cc
@@ -168,9 +168,10 @@ void InitUnwindingRecord(Record* record, size_t code_size_in_bytes) {
   record->exception_handler = offsetof(Record, exception_thunk);
 
   // Hardcoded thunk.
+  AccountingAllocator allocator;
   AssemblerOptions options;
   options.record_reloc_info_for_serialization = false;
-  MacroAssembler masm(nullptr, options, CodeObjectRequired::kNo,
+  MacroAssembler masm(&allocator, options, CodeObjectRequired::kNo,
                       NewAssemblerBuffer(64));
   masm.movq(rax, reinterpret_cast<uint64_t>(&CRASH_HANDLER_FUNCTION_NAME));
   masm.jmp(rax);
